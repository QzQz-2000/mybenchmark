version: '3.8'

services:
  pulsar:
    image: apachepulsar/pulsar:3.2.0
    container_name: pulsar-standalone
    ports:
      - "6650:6650"
      - "8080:8080"
      - "8081:8081"  # Pulsar metrics endpoint
    command: ["bin/pulsar", "standalone"]
    restart: unless-stopped

  # Prometheus (Metrics collection and storage)
  prometheus:
    image: prom/prometheus:v2.48.0
    hostname: prometheus
    container_name: prometheus-pulsar
    depends_on:
      - pulsar
    ports:
      - "9091:9090"  # 使用 9091 避免与 Kafka 的 Prometheus 冲突
    volumes:
      - ./monitoring/prometheus-pulsar.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-pulsar-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana (Visualization dashboard)
  grafana:
    image: grafana/grafana:10.2.0
    hostname: grafana
    container_name: grafana-pulsar
    depends_on:
      - prometheus
    ports:
      - "3001:3000"  # 使用 3001 避免与 Kafka 的 Grafana 冲突
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana-pulsar-data:/var/lib/grafana
    restart: unless-stopped

volumes:
  prometheus-pulsar-data:
  grafana-pulsar-data:
