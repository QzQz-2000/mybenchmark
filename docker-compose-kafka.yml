version: '3.8'

services:
  # Kafka cluster
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000


  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # JMX 配置
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: kafka
      # 修复 JMX RMI 端口绑定问题
      KAFKA_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=9101"
      # Performance tuning
      KAFKA_NUM_NETWORK_THREADS: 8
      KAFKA_NUM_IO_THREADS: 16
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      # ⭐ 支持大消息（Broker 级别配置）- 支持 128MB
      KAFKA_MESSAGE_MAX_BYTES: 134217728
      KAFKA_REPLICA_FETCH_MAX_BYTES: 134217728

  # Kafka JMX Exporter (Exposes Kafka JMX metrics in Prometheus format)
  kafka-jmx-exporter:
    image: openjdk:11-jre-slim
    hostname: kafka-jmx-exporter
    container_name: kafka-jmx-exporter
    depends_on:
      - kafka
    ports:
      - "5556:5556"
    volumes:
      - ./monitoring/kafka-jmx-config.yml:/config.yml:ro
    working_dir: /app
    command:
      - bash
      - -c
      - |
        echo "Downloading JMX Exporter..."
        apt-get update -qq && apt-get install -y -qq wget > /dev/null 2>&1
        wget -q https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_httpserver/0.20.0/jmx_prometheus_httpserver-0.20.0.jar -O jmx_exporter.jar
        echo "Starting JMX Exporter on port 5556..."
        exec java -jar jmx_exporter.jar 5556 /config.yml
    restart: unless-stopped

  # cAdvisor (Container metrics - CPU, Memory, Network, Disk I/O)
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    hostname: cadvisor
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    restart: unless-stopped

  # Prometheus (Metrics collection and storage)
  prometheus:
    image: prom/prometheus:v2.48.0
    hostname: prometheus
    container_name: prometheus-kafka
    depends_on:
      - kafka-jmx-exporter
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus-kafka.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-kafka-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana (Visualization dashboard with auto-provisioning)
  grafana:
    image: grafana/grafana:10.2.0
    hostname: grafana
    container_name: grafana-kafka
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=false
    volumes:
      - grafana-kafka-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    restart: unless-stopped

volumes:
  prometheus-kafka-data:
  grafana-kafka-data:


# version: '3.8'

# services:
#   # Zookeeper (Cluster Coordination)
#   zookeeper:
#     image: confluentinc/cp-zookeeper:7.5.0
#     hostname: zookeeper
#     container_name: zookeeper
#     ports:
#       - "2181:2181"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000

#   # Kafka Broker 1
#   kafka-1:
#     image: confluentinc/cp-kafka:7.5.0
#     hostname: kafka-1
#     container_name: kafka-1
#     depends_on:
#       - zookeeper
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
#       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
#       KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#       # 性能参数
#       KAFKA_NUM_NETWORK_THREADS: 8
#       KAFKA_NUM_IO_THREADS: 16

#   # Kafka Broker 2
#   kafka-2:
#     image: confluentinc/cp-kafka:7.5.0
#     hostname: kafka-2
#     container_name: kafka-2
#     depends_on:
#       - zookeeper
#     ports:
#       - "9093:9093"
#     environment:
#       KAFKA_BROKER_ID: 2
#       KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:29093,PLAINTEXT_HOST://localhost:9093
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
#       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
#       KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#       KAFKA_NUM_NETWORK_THREADS: 8
#       KAFKA_NUM_IO_THREADS: 16

#   # Kafka Broker 3
#   kafka-3:
#     image: confluentinc/cp-kafka:7.5.0
#     hostname: kafka-3
#     container_name: kafka-3
#     depends_on:
#       - zookeeper
#     ports:
#       - "9094:9094"
#     environment:
#       KAFKA_BROKER_ID: 3
#       KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:29094,PLAINTEXT_HOST://localhost:9094
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
#       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
#       KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#       KAFKA_NUM_NETWORK_THREADS: 8
#       KAFKA_NUM_IO_THREADS: 16

